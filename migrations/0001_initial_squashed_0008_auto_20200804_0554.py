# Generated by Django 3.2.6 on 2021-08-13 00:26

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion

class Migration(migrations.Migration):

    replaces = [('simple_locations', '0001_initial'), ('simple_locations', '0002_load_initial_data'), ('simple_locations', '0003_auto_20170320_1024'), ('simple_locations', '0004_auto_20170330_1618'), ('simple_locations', '0005_auto_20170403_1507'), ('simple_locations', '0006_auto_20180202_1540'), ('simple_locations', '0007_area_geom_can_be_blank'), ('simple_locations', '0008_auto_20200804_0554')]

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=50)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
            ],
            options={
                'verbose_name': 'Area',
                'verbose_name_plural': 'Areas',
            },
        ),
        migrations.CreateModel(
            name='AreaType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'verbose_name': 'Area Type',
                'verbose_name_plural': 'Area Types',
            },
        ),
        migrations.CreateModel(
            name='FacilityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'verbose_name': 'Facility Type',
                'verbose_name_plural': 'Facility Types',
            },
        ),
        migrations.CreateModel(
            name='Point',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(decimal_places=10, max_digits=13)),
                ('longitude', models.DecimalField(decimal_places=10, max_digits=13)),
            ],
            options={
                'verbose_name': 'Point',
                'verbose_name_plural': 'Points',
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(blank=True, max_length=64)),
                ('area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='facility', to='simple_locations.area')),
                ('catchment_areas', models.ManyToManyField(related_name='catchment', to='simple_locations.Area')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='simple_locations.point')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='facility', to='simple_locations.facility')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='simple_locations.facilitytype')),
            ],
            options={
                'verbose_name': 'Facility',
                'verbose_name_plural': 'Facilities',
            },
        ),
        migrations.AddField(
            model_name='area',
            name='kind',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='simple_locations.areatype'),
        ),
        migrations.AddField(
            model_name='area',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='simple_locations.point'),
        ),
        migrations.AddField(
            model_name='area',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='simple_locations.area'),
        ),
        migrations.AlterUniqueTogether(
            name='area',
            unique_together={('code', 'kind')},
        ),
        migrations.AlterModelManagers(
            name='area',
            managers=[
            ],
        ),
        migrations.AddField(
            model_name='area',
            name='geom',
            field=django.contrib.gis.db.models.fields.MultiPolygonField(null=True, srid=4326),
        ),
        migrations.DeleteModel(
            name='Facility',
        ),
        migrations.DeleteModel(
            name='FacilityType',
        ),
        migrations.AlterModelManagers(
            name='area',
            managers=[
            ],
        ),
        migrations.AlterField(
            model_name='area',
            name='geom',
            field=django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326),
        ),
        migrations.CreateModel(
            name='AreaProfile',
            fields=[
                ('date_created', models.DateField(auto_now_add=True, null=True, verbose_name='Date Created')),
                ('date_modified', models.DateField(blank=True, null=True, verbose_name='Last Modified')),
                ('area', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='simple_locations.area')),
                ('description', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndicatorMeasureSchema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schema', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='AreaIndicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateField(auto_now_add=True, null=True, verbose_name='Date Created')),
                ('date_modified', models.DateField(blank=True, null=True, verbose_name='Last Modified')),
                ('name', models.TextField()),
                ('measure', models.CharField(choices=[('U', 'Units'), ('P', 'Percentages'), ('N', 'Nominal'), ('O', 'Ordinal'), ('Q', 'Qualitative')], default='U', help_text='Define the unit of measure in which the value is reported.', max_length=2)),
                ('value', models.JSONField()),
                ('dimensions', models.JSONField(help_text='A category used for disaggregating the result by gender, age, etc.')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='simple_locations.area')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
